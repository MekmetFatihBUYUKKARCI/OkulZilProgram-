<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ESoQgBCEIAQhCAEIQgBCEIAQhCAEIQgP/9k=
</value>
  </data>
</root>